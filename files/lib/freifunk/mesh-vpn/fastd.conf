peer group "backbone" {
	peer limit 2;
	include peers from "backbone";
}
on up "
	. /lib/ar71xx.sh

	board=\"$(ar71xx_board_name)\"

	case \"$board\" in
		tl-wdr3600|\
		tl-wdr4300)
		        macaddr=\"$(uci get wireless.radio1.macaddr)\"
			;;
		*)
			macaddr=\"$(uci get wireless.radio0.macaddr)\"
			;;
	esac
	## Key-Upload
	URL_1='http://fastd1.kbu.freifunk.net'
	URL_2='http://fastd2.kbu.freifunk.net'
	URL_3='http://fastd3.kbu.freifunk.net'
	URL_4='http://fastd4.kbu.freifunk.net'
	NODE_ID=$macaddr 	
	
	/lib/freifunk/mesh-vpn/upload_key $URL_1 $NODE_ID &
	/lib/freifunk/mesh-vpn/upload_key $URL_2 $NODE_ID &
	/lib/freifunk/mesh-vpn/upload_key $URL_3 $NODE_ID &
	/lib/freifunk/mesh-vpn/upload_key $URL_4 $NODE_ID &

	## Ende Key-Upload

	
	oIFS=\"$IFS\"; IFS=\":\"; set -- $macaddr; IFS=\"$oIFS\"
	b2mask=0x02
	
	macaddr=$(printf \"%02x:%s:%s:%02x:%s:%s\" $(( 0x$1 | $b2mask )) $2 $3 $(( (0x$4 + 1) % 0x100 )) $5 $6)
	
	if [ \"$(uci get freifunk.@bandwidth[0].enabled)\" = 1 ]; then
		tc qdisc add dev $INTERFACE root tbf rate \"$(uci get freifunk.@bandwidth[0].upstream)kbit\" latency 50ms burst 2k

		tc qdisc add dev $INTERFACE handle ffff: ingress
		tc filter add dev $INTERFACE parent ffff: u32 match u8 00 00 at 0 police rate \"$(uci get freifunk.@bandwidth[0].downstream)kbit\" burst 10k drop flowid :1
	fi

	ip link set address $macaddr up dev $INTERFACE

	exit 0
";
